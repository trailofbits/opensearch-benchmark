diff --git osbenchmark/workload/params.py osbenchmark/workload/params.py
index 9ba99f71..d70ee56d 100644
--- osbenchmark/workload/params.py
+++ osbenchmark/workload/params.py
@@ -1057,6 +1057,7 @@ class VectorSearchPartitionParamSource(VectorDataSetPartitionParamSource):
     PARAMS_NAME_REQUEST_PARAMS = "request-params"
     PARAMS_NAME_SOURCE = "_source"
     PARAMS_NAME_ALLOW_PARTIAL_RESULTS = "allow_partial_search_results"
+    PARAMS_NAME_EXTRA_QUERY_PARAMS = "extra_query_params"
 
     def __init__(self, workloads, params, query_params, **kwargs):
         super().__init__(workloads, params, Context.QUERY, **kwargs)
@@ -1079,6 +1080,8 @@ class VectorSearchPartitionParamSource(VectorDataSetPartitionParamSource):
             self.PARAMS_NAME_ID_FIELD_NAME: params.get(self.PARAMS_NAME_ID_FIELD_NAME),
         })
 
+        self.extra_query_params = params.get(self.PARAMS_NAME_EXTRA_QUERY_PARAMS)
+
         self.filter_type = self.query_params.get(self.PARAMS_NAME_FILTER_TYPE)
         self.filter_body = self.query_params.get(self.PARAMS_NAME_FILTER_BODY)
 
@@ -1183,7 +1186,8 @@ class VectorSearchPartitionParamSource(VectorDataSetPartitionParamSource):
             A dictionary containing the body used for search query
         """
         query = {
-            "vector": vector,
+            "field": self.field_name,
+            "query_vector": vector,
             "k": self.k,
         }
         if efficient_filter:
@@ -1191,10 +1195,12 @@ class VectorSearchPartitionParamSource(VectorDataSetPartitionParamSource):
                 "filter": efficient_filter,
             })
 
+        if self.extra_query_params:
+            query.update(self.extra_query_params)
+
+
         knn_search_query = {
-            "knn": {
-                self.field_name: query,
-            },
+            "knn": query,
         }
 
         if self.is_nested:
