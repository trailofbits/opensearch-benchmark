---
name: Ingest/Snapshot workloads

permissions:
  contents: read

on:
  workflow_dispatch:
    inputs:
      workloads:
        description: 'Workloads to run (comma separated)'
        required: true
        type: string
        default: pmc
      workload_params:
        description: 'Overwrite workload parameters (JSON)'
        required: true
        type: string
        default: '{}'
      cluster_types:
        description: 'Cluster types (comma separated)'
        required: true
        type: string
        default: OpenSearch
      force_snapshot:
        description: 'Force snapshot creation (delete existing snapshot)'
        required: false
        type: boolean
        default: false
      es_versions:
        description: 'Elasticsearch versions (comma separated)'
        required: false
        type: string
        default: 8.15.0
      snapshot_version:
        description: 'Snapshot version (`new` or `latest`)'
        required: true
        type: string
        default: 'latest'
      os_versions:
        description: 'OpenSearch versions (comma separated)'
        required: false
        type: string
        default: 2.18.0
      aws_region:
        description: 'AWS region'
        required: false
        type: string
        default: eu-north-1

env:
  WORKLOADS: ${{ inputs.workloads }}
  WORKLOAD_PARAMS: ${{ inputs.workload_params }}
  CLUSTER_TYPES: ${{ inputs.cluster_types }}
  OS_VERSIONS: ${{ inputs.os_versions || '2.16.0,2.17.1,2.18.0' }}
  ES_VERSIONS: ${{ inputs.es_versions || '8.15.4' }}

jobs:
  generate-matrix:
    runs-on: [self-hosted, standard, ubuntu-latest-micro]
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - uses: actions/checkout@v4
      - id: set-matrix
        run: |
          res=$(python3 .github/generate-matrix.py "$WORKLOADS" "$WORKLOAD_PARAMS" "$CLUSTER_TYPES" "$OS_VERSIONS" "$ES_VERSIONS" dev)
          echo "matrix=$res" >> $GITHUB_OUTPUT
          echo "$res"
        env:
          WORKLOADS: ${{ env.WORKLOADS }}
          WORKLOAD_PARAMS: ${{ env.WORKLOAD_PARAMS }}
          CLUSTER_TYPES: ${{ env.CLUSTER_TYPES }}
          OS_VERSIONS: ${{ env.OS_VERSIONS }}
          ES_VERSIONS: ${{ env.ES_VERSIONS }}

  ingest-workload:
    needs: generate-matrix
    strategy:
      fail-fast: false
      max-parallel: 12
      matrix: ${{ fromJson(needs.generate-matrix.outputs.matrix) }}

    uses: ./.github/workflows/benchmark.yml
    with:
      name: ${{ matrix.cluster_type }} / ${{ matrix.name }}
      cluster_type: ${{ matrix.cluster_type }}
      workload: ${{ matrix.workload }}
      workload_params: ${{ matrix.workload_params }}
      perform_benchmark: false
      create_snapshot: true
      force_snapshot: ${{ inputs.force_snapshot }}
      es_version: ${{ matrix.es_version }}
      os_version: ${{ matrix.os_version }}
      aws_region: ${{ inputs.aws_region || 'ca-central-1' }}
      snapshot_version: ${{ inputs.snapshot_version }}
      # assumes the only possible event is workflow_dispatch
      ci_tag: 'manual'
    secrets:
      SNAPSHOT_AWS_ACCESS_KEY_ID: ${{ secrets.SNAPSHOT_AWS_ACCESS_KEY_ID }}
      SNAPSHOT_AWS_SECRET_ACCESS_KEY: ${{ secrets.SNAPSHOT_AWS_SECRET_ACCESS_KEY }}
      DATASTORE_HOST: ${{ vars.DATASTORE_HOST }}
      DATASTORE_USERNAME: ${{ secrets.DATASTORE_USERNAME }}
      DATASTORE_PASSWORD: ${{ secrets.DATASTORE_PASSWORD }}
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
      SLACK_CHANNEL_ID: ${{ secrets.SLACK_CHANNEL_ID }}
