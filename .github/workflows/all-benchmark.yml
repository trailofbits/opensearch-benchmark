---
name: Nightly Benchmarks

permissions:
  contents: read

on:
  schedule:
    # Run every day at 00:00
    - cron: "0 0 * * *"

  workflow_dispatch:
    inputs:
      workloads:
        description: 'Workloads to run (comma separated)'
        required: true
        type: string
        default: pmc
      workload_params:
        description: 'Workload parameters (JSON)'
        required: true
        type: string
        default: '{"number_of_replicas":0,"bulk_indexing_clients":1,"target_throughput":0}'
      cluster_types:
        description: 'Cluster types (comma separated list, e.g. OpenSearch,ElasticSearch)'
        required: true
        type: string
        default: OpenSearch
      benchmark_type:
        description: 'Benchmark type'
        required: true
        type: string
        default: dev
      es_version:
        description: 'Elasticsearch version'
        required: false
        type: string
        default: 8.15.0
      os_version:
        description: 'OpenSearch version'
        required: false
        type: string
        default: 2.16.0
      aws_region:
        description: 'AWS region'
        required: false
        type: string
        default: eu-north-1

env:
  WORKLOADS: ${{ inputs.workloads || 'big5,pmc,noaa,nyc_taxis' }}
  WORKLOAD_PARAMS: ${{ inputs.workload_params || '{"number_of_replicas":0,"bulk_indexing_clients":1,"target_throughput":0}' }}
  CLUSTER_TYPES: ${{ inputs.cluster_types || 'OpenSearch,ElasticSearch' }}

jobs:
  generate-matrix:
    runs-on: [self-hosted, standard, ubuntu-latest-micro]
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - uses: actions/checkout@v4
      - id: set-matrix
        run: |
          res=$(python3 .github/generate-matrix.py "$WORKLOADS" "$WORKLOAD_PARAMS" "$CLUSTER_TYPES" "$BENCHMARK_TYPE")
          echo "matrix=$res" >> $GITHUB_OUTPUT
          echo "$res"
        env:
          WORKLOADS: ${{ env.WORKLOADS }}
          WORKLOAD_PARAMS: ${{ env.WORKLOAD_PARAMS }}
          CLUSTER_TYPES: ${{ env.CLUSTER_TYPES }}
          BENCHMARK_TYPE: ${{ inputs.benchmark_type }}

  run-benchmarks:
    needs: generate-matrix
    strategy:
      fail-fast: false
      max-parallel: 6
      matrix: ${{ fromJson(needs.generate-matrix.outputs.matrix) }}

    uses: ./.github/workflows/benchmark.yml
    with:
      name: ${{ matrix.name }}
      cluster_type: ${{ matrix.cluster_type}}
      workload: ${{ matrix.workload }}
      workload_params: ${{ matrix.workload_params }}
      benchmark_type: ${{ matrix.benchmark_type || 'official' }}
      perform_benchmark: true
      test_procedure: ${{ matrix.test_procedure }}
      es_version: ${{ inputs.es_version || '8.15.0' }}
      os_version: ${{ inputs.os_version || '2.16.0' }}
      aws_region: ${{ inputs.aws_region || 'ca-central-1' }}
      # assumes the possible events are schedule or workflow_dispatch
      ci_tag: ${{ github.event_name == 'schedule' && 'scheduled' || 'manual' }}
    secrets:
      SNAPSHOT_AWS_ACCESS_KEY_ID: ${{ secrets.SNAPSHOT_AWS_ACCESS_KEY_ID }}
      SNAPSHOT_AWS_SECRET_ACCESS_KEY: ${{ secrets.SNAPSHOT_AWS_SECRET_ACCESS_KEY }}
      DATASTORE_HOST: ${{ vars.DATASTORE_HOST }}
      DATASTORE_USERNAME: ${{ secrets.DATASTORE_USERNAME }}
      DATASTORE_PASSWORD: ${{ secrets.DATASTORE_PASSWORD }}
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
