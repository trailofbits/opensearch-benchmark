name: OSB-Benchmark

on:
  workflow_call:
    inputs:
      workload:
        description: 'Workload to run'
        required: true
        type: string
        default: big5
      workload_params:
        description: 'Workload parameters'
        required: true
        type: string
        default: number_of_replicas:0,bulk_indexing_clients:1,target_throughput:0
      cluster_type:
        description: 'Cluster type'
        required: true
        type: string
        default: OpenSearch
      s3_bucket_name:
        description: 'S3 bucket name'
        required: true
        type: string
        default: os-snapshots-osb
    secrets:
      SNAPSHOT_AWS_ACCESS_KEY_ID:
        required: true
      SNAPSHOT_AWS_SECRET_ACCESS_KEY:
        required: true
      DATASTORE_HOST:
        required: true
      DATASTORE_USERNAME:
        required: true
      DATASTORE_PASSWORD:
        required: true

  workflow_dispatch:
    inputs:
      workload:
        description: 'Workload to run'
        required: true
        type: choice
        default: big5
        options:
          - big5
          - pmc
          - noaa
          - nyc_taxis
      workload_params:
        description: 'Workload parameters'
        required: true
        type: string
        default: number_of_replicas:0,bulk_indexing_clients:1,target_throughput:0
      cluster_type:
        description: 'Cluster type'
        required: true
        type: choice
        options:
          - OpenSearch
          - Elasticsearch
        default: OpenSearch
      s3_bucket_name:
        description: 'S3 bucket name'
        required: true
        type: string
        default: os-snapshots-osb
      
jobs:
  run-osb:
    runs-on: ubuntu-latest
    steps:
     - uses: actions/checkout@v4
       with:
        ref: main

     - uses: hashicorp/setup-terraform@v3

     - name: Terraform setup
       run: terraform init
       working-directory: infra

     - name: Get current time
       id: now
       run: echo "::set-output name=now::$(date +%s)"

     - name: Create benchmark environment
       run: terraform apply -auto-approve
       working-directory: infra
       env:
          TF_VAR_snapshot_user_aws_access_key_id: ${{ secrets.SNAPSHOT_AWS_ACCESS_KEY_ID }}
          TF_VAR_snapshot_user_aws_secret_access_key: ${{ secrets.SNAPSHOT_AWS_SECRET_ACCESS_KEY }}
          TF_VAR_datastore_host: ${{ secrets.DATASTORE_HOST }}
          TF_VAR_datastore_username: ${{ secrets.DATASTORE_USERNAME }}
          TF_VAR_datastore_password: ${{ secrets.DATASTORE_PASSWORD }}
          TF_VAR_aws_region: ca-central-1
          TF_VAR_aws_subnet_zone: ca-central-1a
          TF_VAR_target_cluster_type: ${{ inputs.cluster_type}}
          TF_VAR_s3_bucket_name: ${{ inputs.s3_bucket_name }}
          TF_VAR_prefix_list_id: pl-06f77c0b59dbf70fe
          TF_VAR_benchmark_environment: gh-nightly-${{ steps.now.outputs.now }}
          TF_VAR_workload: ${{ inputs.workload}}
          TF_VAR_workload_params: ${{ inputs.workload_params }}
     
     - name: Restore snapshot
       run: |
          ssh -t ubuntu@$(terraform output -raw load-generation-ip) -- "set -x; bash -ic '/restore_snapshot.sh;'"
     
     - name: Run benchmark
       run: |
          ssh -t ubuntu@$(terraform output -raw load-generation-ip) -- "set -x; bash -ic '/benchmark.sh;'"

     - name: Destroy benchmark environment
       run: terraform destroy
